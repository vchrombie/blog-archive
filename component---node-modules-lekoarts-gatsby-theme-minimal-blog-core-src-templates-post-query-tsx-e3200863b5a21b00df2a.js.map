{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/utterance.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","len","length","arr2","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","fn","minLen","n","prototype","toString","call","slice","constructor","test","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","Utterances","memo","repo","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","entries","forEach","value","setAttribute","current","appendChild","ref","displayName","shadow","v","Post","post","data","title","description","excerpt","image","banner","childImageSharp","resize","undefined","pathname","variant","sx","color","mt","fontSize","date","timeToRead","my","boxShadow","join","body","PostComponent","query"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-e3200863b5a21b00df2a.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React, { createRef, useLayoutEffect } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\n\nexport interface IUtterancesProps {\n    repo: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo }) => {\n    const containerRef = createRef<HTMLDivElement>();\n\n    useLayoutEffect(() => {\n        const utterances = document.createElement('script');\n\n        const attributes = {\n            src,\n            repo,\n            'issue-term': 'pathname',\n            label: 'comment',\n            theme: 'github-light',\n            crossOrigin: 'anonymous',\n            async: 'true',\n        };\n\n        Object.entries(attributes).forEach(([key, value]) => {\n            utterances.setAttribute(key, value);\n        });\n\n        containerRef.current.appendChild(utterances);\n    }, [repo]);\n\n    return <div ref={containerRef} />;\n});\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;","/** @jsx jsx */\nimport { jsx, Heading } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport React from \"react\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport SEO from \"./seo\"\nimport Utterances from \"./utterance\"\n\ntype PostProps = {\n  data: {\n    post: {\n      slug: string\n      title: string\n      date: string\n      tags?: {\n        name: string\n        slug: string\n      }[]\n      description?: string\n      body: string\n      excerpt: string\n      timeToRead?: number\n      banner?: {\n        childImageSharp: {\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n  }\n}\n\nconst px = [`32px`, `16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`)\n\nconst Post = ({ data: { post } }: PostProps) => (\n  <Layout>\n    <SEO\n      title={post.title}\n      description={post.description ? post.description : post.excerpt}\n      image={post.banner ? post.banner.childImageSharp.resize.src : undefined}\n      pathname={post.slug}\n    />\n    <Heading variant=\"styles.h2\">{post.title}</Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section sx={{ my: 5, \".gatsby-resp-image-wrapper\": { my: [4, 4, 5], boxShadow: shadow.join(`, `) } }}>\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </section>\n    <Utterances repo=\"vchrombie/comments\" />\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from \"gatsby\"\nimport PostComponent from \"../components/post\"\n\nexport default PostComponent\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    post(slug: { eq: $slug }) {\n      slug\n      title\n      date(formatString: $formatString)\n      tags {\n        name\n        slug\n      }\n      description\n      canonicalUrl\n      body\n      excerpt\n      timeToRead\n      banner {\n        childImageSharp {\n          resize(width: 1200, quality: 90) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Post from \"../../../components/post\"\n\ntype Props = {\n  data: {\n    post: any\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCorePost({ ...props }: Props) {\n  return <Post {...props} />\n}\n"],"sourceRoot":""}