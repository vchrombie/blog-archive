{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/ci-with-gha","result":{"data":{"post":{"__typename":"MdxPost","slug":"/ci-with-gha","title":"Continuous Integration with GitHub Actions","date":"15.01.2021","tags":[{"name":"GrimoireLab","slug":"grimoire-lab"},{"name":"CHAOSS","slug":"chaoss"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Continuous Integration with GitHub Actions\",\n  \"date\": \"2021-01-15T00:00:00.000Z\",\n  \"tags\": [\"GrimoireLab\", \"CHAOSS\"],\n  \"slug\": \"ci-with-gha\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"It all started with a big announcement made by the Travis CI team about their change in their pricing model. You can read about it from here, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing\"\n  }), \"The new pricing model for travis-ci.com\"), \". It made us think about the other options we have now, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chaoss/grimoirelab/issues/400\"\n  }), \"discussion\"), \".\"), mdx(\"p\", null, \"As \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ElizabethN\"\n  }), \"@ElizabethN\"), \" quotes\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"It looks like we will either have to bite the bullet and migrate to GitHub Actions or bite a bigger one and move the whole org to GitLab & GitLab CI.\")), mdx(\"p\", null, \"We had a few options, so I talked to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/sduenas\"\n  }), \"@sduenas\"), \" about it, and we decided to try GitHub Actions to see how it works. I worked on creating a GHA for the toolkit and perceval. I referred to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.github.com/en/actions\"\n  }), \"GitHub Actions Documentation\"), \" and observed a few things.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the syntax is almost similar to that of travis solutions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"travis had a few things pre-configured in the systems, but in github actions, you need to configure them\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the documentation is  good, and it was so much of help\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it has an actively growing community around it, with forums asking and answering questions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the UI wasn't impressive (but they have updated it during GitHub Universe, and it looks super now)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"github actions is super fast than travis.org (maybe because travis.org started throttling performance since it will be shutting down soon)\")), mdx(\"p\", null, \"It was simple. I was able to create a workflow for the toolkit at the very first attempt. The main challenge is, there are a few tools in the GrimoireLab toolset that require services like mysql, elasticsearch, etc. The documentation and a few other built-in actions have come to the rescue.\"), mdx(\"p\", null, \"I will share some different services which we had to use.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MySQL - services in GitHub Actions\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"\\n    services:\\n      # How to use MySQL\\n      mysql:\\n        image: mysql:5.7\\n        env:\\n          MYSQL_ROOT_PASSWORD: root\\n        ports:\\n          - 3306:3306\\n        options: --health-cmd=\\\"mysqladmin ping\\\" --health-interval=10s --health-timeout=5s --health-retries=3\\n    \\n    steps:\\n    ...\\n    - name: Verify MySQL connection\\n      run: |\\n        sudo apt-get install -y mysql-client libmysqlclient-dev\\n        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e \\\"SHOW GRANTS FOR 'root'@'localhost'\\\"\\n        mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql\\n    \\n    - name: Setup MySQL Database\\n      env:\\n        DB_HOST: 127.0.0.1\\n        DB_PORT: ${{ job.services.mysql.ports[3306] }}\\n      run: |\\n        mysql --host $DB_HOST --port $DB_PORT -uroot -proot -e \\\"SHOW DATABASES\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Elasticsearch - \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/elastic/elastic-github-actions\"\n  }), \"elastic/elastic-github-actions\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"    \\n    strategy:\\n      matrix:\\n        elasticsearch-version: [6.1.0, 7.2.0]\\n    \\n    steps:\\n    ...\\n    - name: Configure sysctl limits\\n      run: |\\n        sudo swapoff -a\\n        sudo sysctl -w vm.swappiness=1\\n        sudo sysctl -w fs.file-max=262144\\n        sudo sysctl -w vm.max_map_count=262144\\n      \\n    - name: Runs Elasticsearch ${{ matrix.elasticsearch-version }}\\n      uses: elastic/elastic-github-actions/elasticsearch@master\\n      with:\\n        stack-version: ${{ matrix.elasticsearch-version }}\\n      \\n    - name: Verify Elasticsearch connection\\n      run: |\\n        curl -fsSL \\\"http://localhost:9200/_cat/health?h=status\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Coveralls - \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/TheKevJames/coveralls-python\"\n  }), \"TheKevJames/coveralls-python\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"    \\n    steps:\\n    ...\\n      - name: Install dependencies\\n        run: pip install coveralls\\n      \\n      - name: Tests and Coverage\\n        env:\\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n        run: |\\n          cd tests\\n          coverage run --source=grimoirelab_toolkit run_tests.py\\n          # --service=github is a workaround for bug\\n          # https://github.com/coveralls-clients/coveralls-python/issues/251\\n          coveralls --service=github\\n\")), mdx(\"p\", null, \"The coveralls gave several errors without the flag \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--service=github\"), \". I found a workaround with the help of the community.\"), mdx(\"p\", null, \"I faced some other challenges too, which are mostly configuration issues with the database and the tools. It exposed some loopholes in the documentation of the GrimoireLab project. I spent almost two weeks scratching my head to fix such configuration issues in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chaoss/grimoirelab-elk\"\n  }), \"ELK\"), \", but \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mafesan\"\n  }), \"@mafesan\"), \" helped me fix them.\"), mdx(\"p\", null, \"I worked on all the components, porting the CI and fixing any issues with the tests like flake8 errors and incomplete configurations in the repository. Within a few weeks, we completed the job and ported all the repositories from Travis CI to GHA. You can find the issue from here, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chaoss/grimoirelab/issues/405\"\n  }), \"chaoss/grimoirelab#405\"), \".\"), mdx(\"p\", null, \"The next comes the Continuous Deployment with GitHub Actions. \\uD83D\\uDC4B\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"It all started with a big announcement made by the Travis CI team about their change in their pricing model. You can read about it from hereâ€¦","timeToRead":2,"banner":null}},"pageContext":{"slug":"/ci-with-gha","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}