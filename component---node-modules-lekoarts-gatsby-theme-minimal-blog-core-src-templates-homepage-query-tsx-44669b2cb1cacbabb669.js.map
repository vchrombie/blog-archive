{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","List","children","sx","mb","ul","margin","padding","li","listStyle","a","variant","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontSize","fontWeight","color","parentName","isMDXComponent","Title","makeShortcode","text","Homepage","posts","blogPath","siteTitle","useSiteMetadata","visuallyHidden","p","mt","showTags","HomepageComponent","allPost","data","nodes","BlogListItem","post","title","date","Listing","className"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-44669b2cb1cacbabb669.js","sourcesContent":["import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Namaste.\n    </Text>\n    <p>{`I'm Venu - previously worked as a Backend Developer at `}<a parentName=\"p\" {...{\n        \"href\": \"https://bitergia.com/\"\n      }}>{`Bitergia`}</a>{`. I completed my Bachelors in Computer Science and Engineering from Amrita Vishwa Vidyapeetham, Amritapuri. I work with `}<a parentName=\"p\" {...{\n        \"href\": \"https://chaoss.community/\"\n      }}>{`CHAOSS`}</a>{`, a Linux Foundation project, helping them with building `}<a parentName=\"p\" {...{\n        \"href\": \"http://grimoirelab.github.io/\"\n      }}>{`GrimoireLab`}</a>{` and it's components. I was also a member, currently serving as an alumni guide, of `}<a parentName=\"p\" {...{\n        \"href\": \"https://amfoss.in/\"\n      }}>{`amFOSS`}</a>{`, the Open Source club of Amrita. `}</p>\n    <p>{`I mostly work with Python, Django and ELK stack. I like to travel and cook.`}</p>\n    <p>{`Currently reading `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.goodreads.com/user/show/87504807-venu-vardhan\"\n      }}>{`How to Win Friends and Influence People`}</a>{` by Dale Carnegie; and learning `}<img parentName=\"p\" {...{\n        \"style\": {\n          \"verticalAlign\": \"middle\"\n        },\n        \"src\": \"https://images.emojiterra.com/twitter/v12/512px/1f1ea-1f1f8.png\",\n        \"alt\": \"drawing\",\n        \"width\": 38,\n        \"title\": \"¡Sí, hablo español un poco bien!\"\n      }}></img>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vchrombie/wordle-github-contributions\"\n      }}>{`Wordle GitHub Contributions`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vchrombie/peodd\"\n      }}>{`poetry export, but only for dev-dependencies`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vchrombie/gsoc\"\n      }}>{`Creating Quality Models using GrimoireLab and CHAOSS Metrics`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vchrombie/grimoirelab-perceval-zulip\"\n      }}>{`Perceval plugin for Zulip data source`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://gitlab.com/amfoss/gitlit\"\n      }}>{`GitLit`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List sx={{ variant: `section_bottom` }}>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}