{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","a","as","Link","to","replaceSlashes","name","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","isMDXComponent","className","List","children","sx","mb","ul","margin","padding","li","listStyle","variant","Homepage","posts","blogPath","p","fontSize","mt","text","showTags","query","HomepageComponent","allPost","data","nodes","BlogListItem","post","color","title","date","Listing"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-cc1cee2f3e390c69a5bd.js","sourcesContent":["import React from \"react\"\nimport { Styled } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Styled.a>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Namaste.`}</h2>\n    <p>{`I'm Venu - currently doing my CSE final year undergraduate studies at Amrita Vishwa Vidyapeetham, Kollam. I work with `}<a parentName=\"p\" {...{\n        \"href\": \"https://chaoss.community/\"\n      }}>{`CHAOSS`}</a>{`, a Linux Foundation project, helping them with building `}<a parentName=\"p\" {...{\n        \"href\": \"http://grimoirelab.github.io/\"\n      }}>{`GrimoireLab`}</a>{` and it's components. I am also a member of `}<a parentName=\"p\" {...{\n        \"href\": \"https://amfoss.in/\"\n      }}>{`amFOSS`}</a>{`, the Open Source club of Amrita.`}</p>\n    <p>{`I mostly work with Python and ELK stack. I like to travel and cook.`}</p>\n    <p>{`Currently reading `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.goodreads.com/user/show/87504807-venu-vardhan\"\n      }}>{`How to Win Friends and Influence People`}</a>{` by Dale Carnegie; and learning `}<img parentName=\"p\" {...{\n        \"style\": {\n          \"verticalAlign\": \"middle\"\n        },\n        \"src\": \"https://images.emojiterra.com/twitter/v12/512px/1f1ea-1f1f8.png\",\n        \"alt\": \"drawing\",\n        \"width\": 38,\n        \"title\": \"¡Sí, hablo español un poco bien!\"\n      }}></img>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div className=\"css-1yotqc8-Title\">\n\t<h2 className=\"css-4nhueb-Title\">Projects</h2>\n    </div>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vchrombie/hackbunch\"\n      }}>{`Community Hacktoberfest Tracker`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vchrombie/shuri\"\n      }}>{`Stock Market Prediction using LSTM`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vchrombie/pd-shap-analysis\"\n      }}>{`Analysis of Phishing Detection using SHAP`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://gitlab.com/amfoss/gitlit\"\n      }}>{`GitLit`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/vchrombie/cap-america\"\n      }}>{`Malicious Web Content Detection using Machine Learning`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n}\n\nexport default ({ data }: Props) => {\n  const { allPost } = data\n\n  return <Homepage posts={allPost.nodes} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Styled } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </Styled.a>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}